{"version":3,"sources":["components/statistics/Statistiсs.js","components/FeedbackOptions.js","components/App.js","index.js","components/statistics/Statistics.module.css"],"names":["Statistics","state","total","positivePercentage","className","st","statistics","statistics__list","Object","entries","this","props","map","key","value","statistics__item","id","statistics__vote","Component","FeedbackOptions","handleIncrementVote","evt","target","setState","prevState","textContent","onLeaveFeedback","options","el","type","btn","onClick","App","good","neutral","bad","handleData","data","console","log","keys","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAIMA,E,4MACJC,MAAQ,CAINC,MAAO,EACPC,mBAAoB,G,4CAKtB,WACE,OACE,sBAAKC,UAAWC,IAAGC,WAAnB,UACE,4CACA,oBAAIF,UAAWC,IAAGE,iBAAlB,SACGC,OAAOC,QAAQC,KAAKC,OAAOC,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YAC9B,qBAAIV,UAAWC,IAAGU,iBAAkBC,GAAIH,EAAxC,UACGA,EADH,IACQ,sBAAMT,UAAWC,IAAGY,iBAApB,SAAuCH,MADGD,e,GAjBrCK,aA0BVlB,I,OCxBTmB,E,4MAOJC,oBAAsB,SAACC,GACrB,IAAQC,EAAWD,EAAXC,OACR,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAOG,YAAcD,EAAUF,EAAOG,aAAe,MAG1D,EAAKd,MAAMe,gBAAgB,EAAKzB,Q,4CAElC,WAAU,IAAD,OACC0B,EAAYjB,KAAKC,MAAjBgB,QACR,OACE,gCACE,uDACCA,EAAQf,KAAI,SAACgB,GAAD,OACX,wBACEC,KAAK,SACLzB,UAAWC,IAAGyB,IACdd,GAAIY,EAEJG,QAAS,EAAKX,oBALhB,SAOGQ,GAHIA,a,GA1BaV,aA6EfC,IC/ETa,E,4MACJ/B,MAAQ,CACNgC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPC,WAAa,SAACC,GACZC,QAAQC,IAAIF,I,4CAEd,WACE,MAAsC3B,KAAKT,MAAnCgC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKjC,EAA5B,EAA4BA,MAC5B,OACE,gCACE,cAAC,EAAD,CAEEyB,QAASnB,OAAOgC,KAAK9B,KAAKT,OAC1ByB,gBAAiBhB,KAAK0B,aAGxB,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLjC,MAAOA,EACPC,mBAAoBO,KAAKT,MAAME,4B,GA1BvBe,aAiCHc,IC/BfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,WAAa,+BAA+B,iBAAmB,qCAAqC,iBAAmB,qCAAqC,iBAAmB,wC","file":"static/js/main.29a05085.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import ReactDOM from \"react\";\nimport st from \"./Statistics.module.css\";\n\nclass Statistics extends Component {\n  state = {\n    // good: 0,\n    // neutral: 0,\n    // bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n  // handleTotalIncrement =()=>{\n\n  // }\n  render() {\n    return (\n      <div className={st.statistics}>\n        <h2>Statistics</h2>\n        <ul className={st.statistics__list}>\n          {Object.entries(this.props).map(([key, value]) => (\n            <li className={st.statistics__item} id={key} key={key}>\n              {key}:<span className={st.statistics__vote}>{value}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Statistics;\n\n// ===============\n//  {/* {Object.keys(this.props).map((el) => (\n//             // const itemId = shortid.generate()\n//             <li className={st.statistics__item} id={el} key={el}>\n//               {el}:\n//               <span className={st.statistics__vote}>{this.props.value}.</span>;\n//             </li>\n//           ))} */}\n//           {/* <li> Total: <span>{}</span>   </li> */}\n//           {/* {/* <li>Positive feedback: <span>{}%</span></li> */}\n","// import PropTypes from \"prop-types\";\n// [option]: state[option] + 1,\nimport st from \"./statistics/Statistics.module.css\";\n// import Statistics from \"./statistics/Statistiсs\";\nimport React, { Component } from \"react\";\n\nclass FeedbackOptions extends Component {\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n\n  handleIncrementVote = (evt) => {\n    const { target } = evt;\n    this.setState((prevState) => {\n      return {\n        [target.textContent]: prevState[target.textContent] + 1,\n      };\n    });\n    this.props.onLeaveFeedback(this.state);\n  };\n  render() {\n    const { options } = this.props;\n    return (\n      <div>\n        <h1>Please leave feedback</h1>\n        {options.map((el) => (\n          <button\n            type=\"button\"\n            className={st.btn}\n            id={el}\n            key={el}\n            onClick={this.handleIncrementVote}\n          >\n            {el}\n          </button>\n        ))}\n      </div>\n    );\n  }\n  // render() {\n  //   const { options } = this.props;\n  //   return (\n  //     <div>\n  //       <h1>Please leave feedback</h1>\n  //       {options.map((el) => (\n  //         //  btnId = shortid.generate()\n\n  //         <button\n  //           type=\"button\"\n  //           className={st.btn}\n  //           id={el}\n  //           key={el}\n  //           onClick={this.handleIncrementVote}\n  //         >\n  //           {el}\n  //         </button>\n  //       ))}\n  //       {/* <Statistics\n  //         good={this.state.good}\n  //         neutral={this.state.neutral}\n  //         bad={this.state.bad}\n  //       /> */}\n\n  //       {/* <div className={st.statistics}>\n  //         <h2>Statistics</h2>\n  //         <ul className={st.statistics__list}>\n  //           {options.map((el) => (\n  //             // const itemId = shortid.generate()\n  //             <li className={st.statistics__item} id={el} key={el}>\n  //               {el}:\n  //               <span className={st.statistics__vote}>{this.state.value}.</span>\n  //             </li>\n  //           ))} */}\n  //       {/* <li> Total: <span>{}</span>   </li> */}\n  //       {/* {/* <li>Positive feedback: <span>{}%</span></li> */}\n  //       {/* </ul>\n  //       </div> */}\n  //     </div>\n  //   );\n  // }\n}\nexport default FeedbackOptions;\n\n// =============\n// / onAction = () => {\n//   document.querySelectorAll(\".statistics__item\").map((el) => {\n//     console.log(this.state);\n//     // if (el === this.state){\n//     //   el.textContent = this.state.value\n//     // }\n//   });\n// };\n// const { target } = evt;\n// return this.setState((prevState) => {\n//   Object.entries(this.state).map(([key, value]) => {\n//     // console.log(key, \"k\");\n//     // console.log(value, \"v\");\n//     if (target.textContent === key) {\n//       return (prevState += 1);\n//     }\n//     return value;\n//   });\n// });\n\n//  this.setState((prevState) => {\n//   [target.textContent]: prevState[target.textContent] + 1\n// if (target.textContent === 'good'){\n//   this.state. += 1\n// }\n// Object.entries(this.state).map(([key, value]) => {\n//   if (target.textContent === key) {\n//     return (value += 1);\n//   }\n//   return value;\n// });\n// });\n//   return this.setState((prevState) => {\n//     Object.entries(this.state).map(([key, value]) => {\n//       if (target.textContent === key) {\n//         return (value += 1);\n//       }\n//       return value;\n//     });\n// });\n// x = () =>\n// this.setState((option) => {\n// option:\n// console.log(Object.values(prevState));\n// console.log(target.textContent);\n// if (target === Object.keys(prevState)) {\n//   this.state.good.value += 1;\n// }\n// return {\n// if(target === Object.keys(prevState))\n//   if(target.textContent === Object.keys(prevState)){\n//   ?  (Object.values(prevState) +=1 )\n// : console.log(target.textContent)};}\n// }\n// });\n// };\n\n// onClick = (el) => {\n//   this.setState({state[key] + 1});\n//   console.log(this + 1);\n// };\n","import React, { Component } from \"react\";\nimport Statistics from \"./statistics/Statistiсs\";\nimport FeedbackOptions from \"./FeedbackOptions\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    // total: 0,\n    // positivePercentage: 0,\n  };\n  handleData = (data) => {\n    console.log(data);\n  };\n  render() {\n    const { good, neutral, bad, total } = this.state;\n    return (\n      <div>\n        <FeedbackOptions\n          // options={[good, neutral, bad]}\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleData}\n        ></FeedbackOptions>\n        {/* === */}\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={this.state.positivePercentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__xyKbB\",\"statistics__list\":\"Statistics_statistics__list__28sG1\",\"statistics__item\":\"Statistics_statistics__item__1yo44\",\"statistics__vote\":\"Statistics_statistics__vote__2UGEv\"};"],"sourceRoot":""}